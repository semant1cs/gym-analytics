@mixin margin($multiplier: 1, $spacing_sizes: 50) {
  @each $b, $width in $breakpoints {
    @each $s, $sides in $directions {
      
      @if $width > 0 {
        @each $side in $sides {
          @media screen and (min-width: #{$width}px) {
            &#{$s}-#{$b}-auto {
              margin-#{$side}: auto !important;
            }
          }
        }
      } @else {
        &#{$s}-auto {
          @each $side in $sides {
            margin-#{$side}: auto !important;
          }
        }
      }
      
      @for $size from 0 through $spacing_sizes {
        @if $width > 0 {
          &#{$s}-#{$b}-#{$size} {
            @media screen and (min-width: #{$width}px) {
              @each $side in $sides {
                margin-#{$side}: $multiplier * $size + px !important;
              }
            }
          }
        } @else {
          &#{$s}-#{$size} {
            @each $side in $sides {
              margin-#{$side}: $multiplier * $size + px !important;
            }
          }
        }
      }
    }
  }
}

@mixin padding($multiplier: 1, $spacing_sizes: 50) {
  @each $b, $width in $breakpoints {
    @each $s, $sides in $directions {
      @for $size from 0 through $spacing_sizes {
        @if $width > 0 {
          &#{$s}-#{$b}-#{$size} {
            @media screen and (min-width: #{$width}px) {
              @each $side in $sides {
                padding-#{$side}: $multiplier * $size + px !important;
              }
            }
          }
        } @else {
          &#{$s}-#{$size} {
            @each $side in $sides {
              padding-#{$side}: $multiplier * $size + px !important;
            }
          }
        }
      }
    }
  }
}

.p {
  @include padding;
}

.m {
  @include margin;
}